Посты/комменты догружаются по запросу от клиента,
сервис понимает откуда надо прогружать по переданному id
последнего прогруженного поста/коммента

Запросы работают со списками и возвращают вложенные конструкции сразу
для уменьшения числа запросов к сервису

Например прогрузка новых постов в ленте, это вызов getLinePosts.json

Наша лента определяется какими-то параметрами предпочтений,
которые  в данной домашке не рассматриваются,
сервис принимает id юзера, по токену понимает что это мы, потом
прогружает сколько считает нужным новых постов начиная с записи
с тем самым пост id, который мы передали. Вопрос на сколько быстро
сможет делать эти действия SQL запрос, потому что надо отфильтровать
по каким-то параметрам юзера, а потом вырвать нужную часть

По комментам мы сразу пришиваем не только текст но и фотку и имя автора,
чтобы не идти еще раз в базу

Поскольку чтений сильно больше чем записей, то на чтение ставим больше
копий клиентов базы которые умею только читать, опять же тут не совсем понятно
что конкретно юзать, с параллельной записью сложнее

Логика проверки что это мы по токену и юзер id общая у query и command,
остальное разделяем

При удалении чего-либо естественно проверяем по токену что переданный
юзер относится к этому токену, а потом что то что удаляем относится к юзеру
